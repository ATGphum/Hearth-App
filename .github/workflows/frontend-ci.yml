name: Deploy Frontend to Heroku

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

jobs:
  frontend-test-build:
    if: (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed'))
    name: Test Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: hearth-web

    env:
      NODE_OPTIONS: --max_old_space_size=8192 # Increase node size

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm ci

      # In the future, if you want to add frontend tests here before the build process, can do so
      - name: Build Frontend
        run: npm run build

  # Copied below based on the GitHub Action repo: https://github.com/AkhileshNS/heroku-deploy#license
  deploy:
    if: github.ref == 'refs/heads/main'
    needs: frontend-test-build
    name: Deploy frontend to Heroku
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.14 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "hearth-app-frontend" #Must be unique in Heroku
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          appdir: "hearth-web"
          buildpack: "heroku/nodejs,heroku-community/nginx"
        env:
          HD_VITE_API_HOST: https://hearth-app-backend-17443fe6c6fb.herokuapp.com/ # Will need to change to the server url when backend has been deployed
          HD_VITE_ENV: production
          HD_VITE_AUTH0_DOMAIN: auth.hearthtogether.com
          HD_VITE_AUTH0_WEB_ID: ${{secrets.VITE_AUTH0_WEB_ID}}
          HD_VITE_AUTH0_API_AUDIENCE: https://hearth.au.auth0.com/api/v2/
          HD_VITE_AUTH0_SCOPE: read:current_user openid email offline_access
